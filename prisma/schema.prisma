// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Accounts {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  firstName         String?
  lastName          String?
  auth0Id           String?             @unique
  avatarUrl         String?
  lastLoginAt       DateTime
  createdAt         DateTime            @default(now())
  isAdmin           Boolean             @default(false)
  isStaff           Boolean             @default(false)
  isActive          Boolean             @default(true)
  teamMembers       TeamMembers[]
  memberInvitations MemberInvitations[]
}

model Subscriptions {
  id                   String    @id @default(cuid())
  name                 String
  slug                 String
  createdAt            DateTime  @default(now())
  cancelledAt          DateTime?
  updatedAt            DateTime
  stripeCustomerId     String?
  stripeSubscriptionId String?
  tier                 Tiers?    @relation(fields: [tierId], references: [id])
  isActive             Boolean   @default(true)
  teams                Teams[]
  tierId               Int?
}

model Teams {
  id             Int           @id @default(autoincrement())
  name           String
  slug           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?
  subscription   Subscriptions @relation(fields: [subscriptionId], references: [id])
  subscriptionId String
  members        TeamMembers[]
}

model TeamMembers {
  id                Int                 @id @default(autoincrement())
  team              Teams               @relation(fields: [teamId], references: [id])
  teamId            Int
  account           Accounts            @relation(fields: [accountId], references: [id])
  accountId         Int
  role              String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime?
  memberInvitations MemberInvitations[]
}

model MemberInvitations {
  id           Int         @id @default(autoincrement())
  email        String
  teamMemberId Int
  isAccepted   Boolean     @default(false)
  invitedById  Int
  createdAt    DateTime    @default(now())
  expiredAt    DateTime?
  invitedBy    Accounts    @relation(fields: [invitedById], references: [id])
  member       TeamMembers @relation(fields: [teamMemberId], references: [id])
}

model Tiers {
  id            Int             @id @default(autoincrement())
  name          String
  stripePriceId String
  description   String?
  isActive      Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?
  subscriptions Subscriptions[]
}
